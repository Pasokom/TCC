DROP DATABASE CYBERLIFE_CALENDAR;
CREATE DATABASE CYBERLIFE_CALENDAR;
	USE CYBERLIFE_CALENDAR;
    
CREATE TABLE USUARIO (
	COD_USUARIO int NOT NULL AUTO_INCREMENT,
    EMAIL varchar(255) NOT NULL,
    NOME varchar(50) NOT NULL,
    SOBRENOME varchar(50) NOT NULL,
    SENHA varchar(255) NOT NULL,
    ATIVO bit NOT NULL DEFAULT 1, -- Registra usuarios que optaram por desativar sua conta
    PRIMARY KEY (COD_USUARIO)
);    

/* Dados gerais do lembrete */
CREATE TABLE LEMBRETE (
	COD_LEMBRETE int NOT NULL AUTO_INCREMENT,
    TITULO varchar(50) NOT NULL,
    HORARIO datetime NOT NULL,
    HORARIO_FIM datetime,
    INTERVALO_MINUTOS int, -- intervalo para os lembrete que possuem intervalo de horarios nao horario fixo
    DIA_TODO bit NOT NULL, 
    TIPO_REPETICAO int NOT NULL, -- sem repeticao(0) diario(1) semanal(2) mensal(3) anual(4)
    TIPO_FIM_REPETICAO int NOT NULL, -- nunca(0) dia(1) qtd recorrencias(2)
    ATIVO bit NOT NULL DEFAULT 1, -- o usuario pode optar por desativar o lembrete e entao novas recorrencias nao serao marcadas
    FK_USUARIO int NOT NULL,
    PRIMARY KEY (COD_LEMBRETE),
    FOREIGN KEY (FK_USUARIO) REFERENCES USUARIO(COD_USUARIO)
);

CREATE TABLE LEMBRETE_REPETICAO (
	COD_REPETICAO int NOT NULL AUTO_INCREMENT,
    INTERVALO int,
    DIAS_SEMANA varchar(15),
    FK_LEMBRETE int NOT NULL,
    PRIMARY KEY (COD_REPETICAO),
    FOREIGN KEY (FK_LEMBRETE) REFERENCES LEMBRETE(COD_LEMBRETE)
);

CREATE TABLE LEMBRETE_FIM_REPETICAO (
	COD_FIM_REPETICAO int NOT NULL AUTO_INCREMENT,
    DIA_FIM datetime,
    QTD_RECORRENCIAS int,
    FK_LEMBRETE int NOT NULL,
    PRIMARY KEY (COD_FIM_REPETICAO),
    FOREIGN KEY (FK_LEMBRETE) REFERENCES LEMBRETE(COD_LEMBRETE)
);

/* Dados individuais de cada recorrencia do lembrete */
CREATE TABLE LEMBRETE_RECORRENCIA (
	COD_RECORRENCIA int NOT NULL AUTO_INCREMENT,
    DATA_RECORRENCIA datetime NOT NULL,
    EXCLUIDO bit NOT NULL DEFAULT 0,
    CONCLUIDO bit NOT NULL DEFAULT 0,
    FK_LEMBRETE int NOT NULL,
    PRIMARY KEY (COD_RECORRENCIA),
    FOREIGN KEY (FK_LEMBRETE) REFERENCES LEMBRETE(COD_LEMBRETE)
);

/* Dados gerais do evento */
CREATE TABLE EVENTO (
	COD_EVENTO int NOT NULL AUTO_INCREMENT,
    TITULO varchar(50) NOT NULL,
    DATA_INICIO datetime NOT NULL,
    DATA_FIM datetime NOT NULL,
    DIA_TODO bit NOT NULL,
    LOCAL_EVENTO varchar(150),
    DESCRICAO varchar(255),
    TIPO_REPETICAO int NOT NULL DEFAULT 0, -- sem repeticao(0) diario(1) semanal(2) mensal(3) anual(4)
    TIPO_FIM_REPETICAO int NOT NULL DEFAULT 0 , -- nunca(0) dia(1) qtd recorrencias(2)
    ATIVO bit NOT NULL DEFAULT 1, -- o usuario pode optar por desativar o evento e entao novas recorrencias nao serao marcadas
    FK_USUARIO int NOT NULL,
    PRIMARY KEY (COD_EVENTO),
    FOREIGN KEY (FK_USUARIO) REFERENCES USUARIO(COD_USUARIO)
);

CREATE TABLE EVENTO_REPETICAO (
	COD_REPETICAO int NOT NULL AUTO_INCREMENT,
    INTERVALO int,
    DIAS_SEMANA varchar(15),
    FK_EVENTO int NOT NULL,
    PRIMARY KEY (COD_REPETICAO),
    FOREIGN KEY (FK_EVENTO) REFERENCES EVENTO(COD_EVENTO)
);

CREATE TABLE EVENTO_FIM_REPETICAO (
	COD_FIM_REPETICAO int NOT NULL AUTO_INCREMENT,
    DIA_FIM datetime,
    QTD_RECORRENCIAS int,
    FK_EVENTO int NOT NULL,
    PRIMARY KEY (COD_FIM_REPETICAO),
    FOREIGN KEY (FK_EVENTO) REFERENCES EVENTO(COD_EVENTO)
);

/* Dados individuais de cada recorrencia do evento */
CREATE TABLE EVENTO_RECORRENCIA (
	COD_RECORRENCIA int AUTO_INCREMENT,
    DATA_INICIO datetime NOT NULL,
    DATA_FIM datetime NOT NULL,
    EXCLUIDO bit NOT NULL DEFAULT 0,
    FK_EVENTO int NOT NULL,
    PRIMARY KEY (COD_RECORRENCIA),
    FOREIGN KEY (FK_EVENTO) REFERENCES EVENTO(COD_EVENTO)
);

CREATE TABLE DATAS_COMEMORATIVAS(
	COD_FERIADO int NOT NULL AUTO_INCREMENT,
    NOME varchar(255) NOT NULL,
    TIPO_DATA int, -- dia(0) diasemana(1) movel(2) 
    DIA int,
    DIA_SEMANA int,
	SEMANA int,
    MES int,
    PRIMARY KEY (COD_FERIADO)
);