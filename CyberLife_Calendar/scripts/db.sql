drop database cyber_life;
create database cyber_life;
use cyber_life;

CREATE TABLE `USUARIO` (
  `UCODIGO` int(11) NOT NULL AUTO_INCREMENT,
  `UEMAIL` varchar(255) NOT NULL,
  `UNOME` varchar(255) DEFAULT NULL,
  `USOBRENOME` varchar(255) DEFAULT NULL,
  `USENHA` varchar(255) DEFAULT NULL,
  `UFOTO` longblob,
  PRIMARY KEY (`UCODIGO`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

DROP TABLE IF EXISTS `EVENTO`;
CREATE TABLE `EVENTO` (
  `COD_EVENTO` int(11) NOT NULL AUTO_INCREMENT,
  `TITULO` varchar(100) NOT NULL,
  `DATA_INICIO` datetime NOT NULL,
  `DATA_FIM` datetime NOT NULL,
  `DIA_TODO` bit NOT NULL,
  `LOCAL_EVENTO` varchar(150) DEFAULT NULL,
  `DESCRICAO` varchar(255) DEFAULT NULL,
  `TIPO_REPETICAO` int(11) DEFAULT NULL,
  `TIPO_FIM_REPETICAO` int(11) DEFAULT NULL,
  `FK_USUARIO` int(11) DEFAULT NULL,
  PRIMARY KEY (`COD_EVENTO`),
  KEY `FK_USUARIO` (`FK_USUARIO`),
  CONSTRAINT `EVENTO_ibfk_1` FOREIGN KEY (`FK_USUARIO`) REFERENCES `USUARIO` (`UCODIGO`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;


CREATE TABLE `E_FIM_REPETICAO` (
  `COD_FIM_REPETICAO` int(11) NOT NULL AUTO_INCREMENT,
  `DIA_FIM` datetime DEFAULT NULL,
  `QTD_RECORRENCIAS` int(11) DEFAULT NULL,
  `FK_EVENTO` int(11) DEFAULT NULL,
  PRIMARY KEY (`COD_FIM_REPETICAO`),
  UNIQUE KEY `UNIQUE_EVENTO` (`FK_EVENTO`),
  CONSTRAINT `E_FIM_REPETICAO_ibfk_1` FOREIGN KEY (`FK_EVENTO`) REFERENCES `EVENTO` (`COD_EVENTO`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;


CREATE TABLE `E_REPETIR` (
  `COD_REPETICAO` int(11) NOT NULL AUTO_INCREMENT,
  `INTERVALO` int(11) NOT NULL,
  `DIAS_SEMANA` varchar(15) DEFAULT NULL,
  `FK_EVENTO` int(11) DEFAULT NULL,
  PRIMARY KEY (`COD_REPETICAO`),
  UNIQUE KEY `UNIQUE_EVENTO` (`FK_EVENTO`),
  CONSTRAINT `E_REPETIR_ibfk_1` FOREIGN KEY (`FK_EVENTO`) REFERENCES `EVENTO` (`COD_EVENTO`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;


CREATE TABLE `LEMBRETE` (
  `LCOD_LEMBRETE` int(11) NOT NULL AUTO_INCREMENT,
  `TITULO` varchar(255) DEFAULT NULL,
  `ATIVO` bit(1) DEFAULT NULL,
  `TIPO_RECORRENCIA` int(11) DEFAULT NULL,
  `TIPO_REPETICAO` int(11) DEFAULT NULL,
  `FK_USUARIO` int(11) DEFAULT NULL,
  PRIMARY KEY (`LCOD_LEMBRETE`),
  KEY `FK_USUARIO` (`FK_USUARIO`),
  CONSTRAINT `FK_USUARIO` FOREIGN KEY (`FK_USUARIO`) REFERENCES `USUARIO` (`UCODIGO`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;


CREATE TABLE `HORARIO_LEMBRETE` (
  `HL_CODIGO` int(11) NOT NULL AUTO_INCREMENT,
  `DATA_LEMBRETE` datetime DEFAULT NULL,
  `DATA_FINAL_LEMBRETE` datetime DEFAULT NULL,
  `HORARIO_INICIO` time DEFAULT NULL,
  `HORARIO_FIM` time DEFAULT NULL,
  `HL_INTERVALO_MINUTOS` int(11) DEFAULT NULL,
  `HL_RECORRENCIA` int(11) DEFAULT NULL,
  `HL_SEMANA_DIA` int(11) DEFAULT NULL,
  `HL_QTD_REPETE` int(11) DEFAULT NULL,
  `HL_ATIVO` bit(1) DEFAULT NULL,
  `FK_LEMBRETE` int(11) DEFAULT NULL,
  PRIMARY KEY (`HL_CODIGO`),
  KEY `FK_CODIGO_LEMBRETE` (`FK_LEMBRETE`),
  CONSTRAINT `FK_CODIGO_LEMBRETE` FOREIGN KEY (`FK_LEMBRETE`) REFERENCES `LEMBRETE` (`LCOD_LEMBRETE`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;


DELIMITER // 
CREATE PROCEDURE ADICIONAR_USUARIO( IN EMAIL VARCHAR(255), IN NOME VARCHAR(255),             
         IN SOBRENOME VARCHAR(255), IN SENHA VARCHAR(255))
BEGIN                                                                                  
             IF SOBRENOME IS NULL OR SOBRENOME = '' THEN                                      
                INSERT INTO USUARIO (UEMAIL,UNOME, USENHA) VALUES (EMAIL,NOME,SENHA);         
             ELSE                                                                             
                        INSERT INTO USUARIO (UEMAIL,UNOME,USOBRENOME,USENHA) VALUES           
                               (EMAIL,NOME,SOBRENOME,SENHA);                                  
              END IF;                                                                         
END 
//
DELIMITER // 
CREATE PROCEDURE EMAIL_EXISTE(IN EMAIL VARCHAR(255), OUT RESULT BIT)
BEGIN 
     DECLARE NUMERO_REGISTROS INT;  
     SELECT COUNT(0) INTO NUMERO_REGISTROS FROM USUARIO WHERE UEMAIL = EMAIL;        
           
    IF NUMERO_REGISTROS > 0 THEN               
        SET RESULT = 1;        
    ELSE                 
        SET RESULT = 0;        
   END IF;    
END 
//


DELIMITER // 
CREATE FUNCTION CALCULO_RECORRENCIA(DATA_LEMBRETE DATETIME, TIPO_RECORRENCIA INT , RECORRENCIA INT)
RETURNS DATETIME 
DETERMINISTIC
BEGIN 
    DECLARE RETORNO DATETIME; 
   
     IF TIPO_RECORRENCIA = 0 OR TIPO_RECORRENCIA IS NULL THEN 
           SET RETORNO = DATA_LEMBRETE;
     END IF; 
    
     IF TIPO_RECORRENCIA = 1 THEN 
         SET RETORNO = DATE_ADD(DATA_LEMBRETE, INTERVAL RECORRENCIA DAY);
     END IF ;
     
     IF TIPO_RECORRENCIA  = 2 THEN 
         SET RETORNO = DATE_ADD(DATA_LEMBRETE, INTERVAL RECORRENCIA WEEK);
     END IF ; 
     
     IF TIPO_RECORRENCIA = 3 THEN 
        SET RETORNO = DATE_ADD(DATA_LEMBRETE, INTERVAL RECORRENCIA MONTH);
     END IF; 
     
     IF TIPO_RECORRENCIA = 4  THEN 
        SET RETORNO = DATE_ADD(DATA_LEMBRETE, INTERVAL RECORRENCIA YEAR);
     END IF ; 
       
       RETURN (RETORNO);
   END 
//


DELIMITER //
CREATE PROCEDURE `spRepete`(IN dtLimite DATETIME, IN uCodigo INT)
BEGIN
       DECLARE dtIni DATETIME;
       DECLARE dtFim DATETIME;
       DECLARE nCod  INT;
       DECLARE nInterv INT;
       DECLARE codRepet INT;
    
       DECLARE lErro INT DEFAULT 0;
       
       DECLARE oDados CURSOR FOR 
        SELECT COD_EVENTO, DATA_INICIO, DATA_FIM, TIPO_REPETICAO, INTERVALO
          FROM EVENTO
          LEFT JOIN E_REPETIR ON COD_EVENTO = FK_EVENTO
          WHERE TIPO_REPETICAO > 0;

       DECLARE CONTINUE HANDLER FOR NOT FOUND SET lErro = 1;

       CREATE TEMPORARY TABLE REPETICAO (RPTEVENTO INT, RPTDATA_INICIO DATETIME, RPTDATA_FIM DATETIME);
       INSERT INTO REPETICAO (RPTEVENTO, RPTDATA_INICIO, RPTDATA_FIM)
        SELECT COD_EVENTO, DATA_INICIO, DATA_FIM FROM EVENTO WHERE TIPO_REPETICAO = 0;
       
       OPEN oDados;
       MARCA_INICIO: LOOP
         FETCH oDados INTO nCod, dtIni, dtFim, codRepet, nInterv;
         IF lErro = 1 THEN
           LEAVE MARCA_INICIO;
         END IF;
         WHILE dtIni < dtLimite DO
           INSERT INTO REPETICAO (RPTEVENTO, RPTDATA_INICIO, RPTDATA_FIM) VALUES (nCod, dtIni, dtFim);
           SET dtIni = CALCULO_RECORRENCIA(dtIni, codRepet, nInterv);
           SET dtFim = CALCULO_RECORRENCIA(dtFim, codRepet, nInterv); 
         END WHILE;
       END LOOP;
    
        select COD_EVENTO, TITULO, RPTDATA_INICIO, RPTDATA_FIM, DIA_TODO, LOCAL_EVENTO, DESCRICAO,
          TIPO_REPETICAO, TIPO_FIM_REPETICAO, FK_USUARIO, COD_REPETICAO, INTERVALO, DIAS_SEMANA,
          COD_FIM_REPETICAO, DIA_FIM, QTD_RECORRENCIAS from evento 
	        left join e_repetir on evento.cod_evento = e_repetir.fk_evento
	        left join e_fim_repeticao on evento.cod_evento = e_fim_repeticao.fk_evento
          left join REPETICAO on evento.cod_evento = REPETICAO.RPTEVENTO
          WHERE FK_USUARIO = uCodigo;

       SELECT * FROM REPETICAO;
       DROP TEMPORARY TABLE REPETICAO;
     END;
//


DELIMITER // 
CREATE PROCEDURE ADICIONAR_LEMBRETE (IN LEMBRETE TEXT,IN ATIVO BIT ,IN TIPO_REPETICAO INT,  IN TIPO_RECORRENCIA INT , OUT CODIGO_LEMBRETE INT,IN USUARIO INT) 
 BEGIN 	
	   	INSERT INTO LEMBRETE(TITULO,ATIVO,TIPO_RECORRENCIA, TIPO_REPETICAO, FK_USUARIO) VALUES 
			(LEMBRETE, ATIVO, TIPO_RECORRENCIA, TIPO_REPETICAO, USUARIO);
	   SET CODIGO_LEMBRETE = LAST_INSERT_ID();
     END 
//

DELIMITER //
CREATE PROCEDURE HORARIO_SEM_RECORRENCIA (IN DATA_INICIO DATETIME,IN HORARIO_INICIO TIME , IN HORARIO_FIM TIME , IN INTERVALO INT, IN CODIGO_LEMBRETE INT)
BEGIN   
	IF INTERVALO = 0 THEN		
		INSERT INTO HORARIO_LEMBRETE (DATA_LEMBRETE, HL_ATIVO , FK_LEMBRETE) VALUES (DATA_INICIO,TRUE ,CODIGO_LEMBRETE);
	  ELSE 
		INSERT INTO HORARIO_LEMBRETE (DATA_LEMBRETE, HORARIO_INICIO, HORARIO_FIM , HL_INTERVALO_MINUTOS,HL_ATIVO,  FK_LEMBRETE) VALUES (DATA_INICIO, HORARIO_INICIO, HORARIO_FIM,INTERVALO , TRUE , CODIGO_LEMBRETE);
	END IF;
END //

DELIMITER // 
CREATE PROCEDURE RECORRENCIA_SEM_FIM (IN DATA_INICIO DATETIME, IN HORARIO_INICIO TIME, HORARIO_FIM TIME ,IN INTERVALO INT, IN RECORRENCIA INT, 
IN DIA_SEMANA INT, IN CODIGO_LEMBRETE INT)
BEGIN 
	IF INTERVALO = 0 THEN
		IF DIA_SEMANA > 6 THEN 
			INSERT INTO HORARIO_LEMBRETE (DATA_LEMBRETE, HL_RECORRENCIA, HL_ATIVO, FK_LEMBRETE) VALUES 
			(DATA_INICIO, RECORRENCIA,TRUE,CODIGO_LEMBRETE);
		ELSE 
			INSERT INTO HORARIO_LEMBRETE (DATA_LEMBRETE, HL_RECORRENCIA,HL_SEMANA_DIA, HL_ATIVO, FK_LEMBRETE) VALUES	
				(DATA_INICIO, RECORRENCIA, DIA_SEMANA,TRUE,  CODIGO_LEMBRETE);
		END IF;
	ELSE 
		IF DIA_SEMANA > 6 THEN 
			INSERT INTO HORARIO_LEMBRETE(DATA_LEMBRETE,HORARIO_INICIO, HORARIO_FIM,
			HL_INTERVALO_MINUTOS, HL_RECORRENCIA,HL_ATIVO, FK_LEMBRETE) VALUES 
				(DATA_INICIO, HORARIO_INICIO,HORARIO_FIM, INTERVALO, RECORRENCIA, TRUE , CODIGO_LEMBRETE);
		ELSE 
			INSERT INTO HORARIO_LEMBRETE(DATA_LEMBRETE, HORARIO_INICIO, HORARIO_FIM  ,
				HL_INTERVALO_MINUTOS, HL_RECORRENCIA, HL_SEMANA_DIA, HL_ATIVO,  FK_LEMBRETE) VALUES
					(DATA_INICIO, HORARIO_INICIO, HORARIO_FIM, INTERVALO, RECORRENCIA,DIA_SEMANA,TRUE, CODIGO_LEMBRETE);
		END IF;
	END IF;
END
//
DELIMITER // 
CREATE PROCEDURE RECORRENCIA_POR_QTDE_REPETICAO ( IN DATA_INICIO DATETIME, IN HORARIO_INICIO TIME, IN HORARIO_FIM TIME, IN INTERVALO INT, IN RECORRENCIA INT, 
IN DIA_DA_SEMANA INT , IN REPETICAO_QTD INT, IN CODIGO_LEMBRETE INT)
BEGIN 
	IF INTERVALO = 0 THEN
	INSERT INTO HORARIO_LEMBRETE ( DATA_LEMBRETE,HL_RECORRENCIA, HL_SEMANA_DIA, HL_QTD_REPETE,HL_ATIVO,  FK_LEMBRETE)
		VALUES ( DATA_INICIO, RECORRENCIA,DIA_DA_SEMANA, REPETICAO_QTD, TRUE , CODIGO_LEMBRETE);
	ELSE 	
		INSERT INTO HORARIO_LEMBRETE ( DATA_LEMBRETE, HORARIO_INICIO, HORARIO_FIM 
		,HL_INTERVALO_MINUTOS,HL_SEMANA_DIA,HL_QTD_REPETE,HL_ATIVO , FK_LEMBRETE) VALUES	
		(DATA_INICIO,HORARIO_INICIO, HORARIO_FIM, INTERVALO, DIA_DA_SEMANA,REPETICAO_QTD,TRUE, CODIGO_LEMBRETE);
	END IF;
END //


 
DELIMITER //
CREATE PROCEDURE RECORRENCIA_DATA_DEFINIDA ( IN DATA_INICIO DATETIME, IN DATA_FINAL DATETIME, IN HORARIO_INICIO TIME,
	IN HORARIO_FINAL TIME, IN INTERVALO INT, IN RECORRENCIA INT, IN DIA_SEMANA INT, IN CODIGO_LEMBRETE INT)
BEGIN 
	IF INTERVALO = 0 THEN 
		IF DIA_SEMANA >  6 THEN 
			INSERT INTO HORARIO_LEMBRETE (DATA_LEMBRETE, DATA_FINAL_LEMBRETE, 
			HL_RECORRENCIA,HL_ATIVO, FK_LEMBRETE) 
			VALUES  (DATA_INICIO, DATA_FINAL, RECORRENCIA , TRUE, CODIGO_LEMBRETE) ;
		ELSE 	
			INSERT INTO HORARIO_LEMBRETE ( DATA_LEMBRETE, DATA_FINAL_LEMBRETE, HL_RECORRENCIA,HL_SEMANA_DIA, HL_ATIVO, FK_LEMBRETE) VALUES 
			(DATA_INICIO, DATA_FINAL, RECORRENCIA,DIA_SEMANA,TRUE,  CODIGO_LEMBRETE);
		END IF;
		ELSE 
			IF DIA_SEMANA > 6 THEN 
				INSERT INTO HORARIO_LEMBRETE(DATA_LEMBRETE, DATA_FINAL_LEMBRETE,HORARIO_INICIO, HORARIO_FIM,
				HL_INTERVALO_MINUTOS, HL_RECORRENCIA,HL_ATIVO,  FK_LEMBRETE) VALUES 
				(DATA_INICIO,DATA_FINAL,HORARIO_INICIO,HORARIO_FIM, INTERVALO, RECORRENCIA,TRUE,  CODIGO_LEMBRETE);
			ELSE 
				INSERT INTO HORARIO_LEMBRETE(DATA_LEMBRETE,DATA_FINAL_LEMBRETE, HORARIO_INICIO, HORARIO_FIM  ,
				HL_INTERVALO_MINUTOS, HL_RECORRENCIA, HL_SEMANA_DIA,HL_ATIVO,  FK_LEMBRETE) VALUES
					(DATA_INICIO, DATA_FINAL, HORARIO_INICIO, HORARIO_FIM, INTERVALO, RECORRENCIA,DIA_SEMANA,TRUE, CODIGO_LEMBRETE);
		END IF;
	END IF;
END
//

CREATE VIEW VIEW_INICIA_SESSAO AS
 SELECT UCODIGO, UNOME, USOBRENOME, UEMAIL, USENHA FROM USUARIO;


 
/* this view are going to be used to  store in memory all the reminders of the current day*/
CREATE VIEW VIEW_LEMBRETES_DO_DIA AS 
  SELECT UCODIGO,LCOD_LEMBRETE,TIPO_RECORRENCIA, HL_CODIGO, HL_RECORRENCIA
   FROM LEMBRETE AS L 
   INNER JOIN USUARIO ON FK_USUARIO  = UCODIGO 
   INNER JOIN HORARIO_LEMBRETE AS HL  ON LCOD_LEMBRETE = FK_LEMBRETE 
   WHERE DATE(DATA_LEMBRETE) = DATE(NOW()) 
   OR DATE(CALCULO_RECORRENCIA(DATA_LEMBRETE,L.TIPO_RECORRENCIA,HL_RECORRENCIA))  = DATE(NOW())
   AND ATIVO = TRUE AND HL_ATIVO = TRUE;


/*this view are going to be used to store in memory all the 
reminders that the user had ever made ( if we want to change this 
is just add a where clause in there checking the field 'ATIVADO') */
CREATE VIEW VIEW_CARREGAR_TODOS_LEMBRETES AS 
    SELECT UCODIGO,LCOD_LEMBRETE,HL_CODIGO
    FROM LEMBRETE 
    INNER JOIN USUARIO ON FK_USUARIO = UCODIGO 
    INNER JOIN HORARIO_LEMBRETE ON LCOD_LEMBRETE = FK_LEMBRETE;
//
 /* example of how to use GROUP_CONNCAT and GROUP_BY  */
SELECT LCOD_LEMBRETE, GROUP_CONCAT(HL_CODIGO) CODIGOS
 FROM VIEW_CARREGAR_LEMBRETES  WHERE UCODIGO = 1  
 GROUP BY LCOD_LEMBRETE; 
